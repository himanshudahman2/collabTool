'use strict';

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _model = require('@react-sharedb/model');

var _model2 = _interopRequireDefault(_model);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OBSERVABLE_COLLECTIONS = ['$connection', '$queries', '$components', '$hooks', '$subs', '_page', '_session'];

if (_model2.default) {
  init();
} else {
  console.warn('react-sharedb (@subscribe) can only be used on the client. Ignoring server initialization.');
}

function init() {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3.default)(OBSERVABLE_COLLECTIONS), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var collection = _step.value;

      (0, _util.initLocalCollection)(collection);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}