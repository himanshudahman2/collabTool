{"ast":null,"code":"exports.doNothing = doNothing;\n\nfunction doNothing() {}\n\nexports.hasKeys = function (object) {\n  for (var key in object) return true;\n\n  return false;\n}; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\n\n\nexports.isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nexports.isValidVersion = function (version) {\n  if (version === null) return true;\n  return exports.isInteger(version) && version >= 0;\n};\n\nexports.isValidTimestamp = function (timestamp) {\n  return exports.isValidVersion(timestamp);\n};\n\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n\nexports.dig = function () {\n  var obj = arguments[0];\n\n  for (var i = 1; i < arguments.length; i++) {\n    var key = arguments[i];\n    obj = obj[key] || (i === arguments.length - 1 ? undefined : {});\n  }\n\n  return obj;\n};\n\nexports.digOrCreate = function () {\n  var obj = arguments[0];\n  var createCallback = arguments[arguments.length - 1];\n\n  for (var i = 1; i < arguments.length - 1; i++) {\n    var key = arguments[i];\n    obj = obj[key] || (obj[key] = i === arguments.length - 2 ? createCallback() : {});\n  }\n\n  return obj;\n};\n\nexports.digAndRemove = function () {\n  var obj = arguments[0];\n  var objects = [obj];\n\n  for (var i = 1; i < arguments.length - 1; i++) {\n    var key = arguments[i];\n    if (!obj.hasOwnProperty(key)) break;\n    obj = obj[key];\n    objects.push(obj);\n  }\n\n  ;\n\n  for (var i = objects.length - 1; i >= 0; i--) {\n    var parent = objects[i];\n    var key = arguments[i + 1];\n    var child = parent[key];\n    if (i === objects.length - 1 || !exports.hasKeys(child)) delete parent[key];\n  }\n};\n\nexports.supportsPresence = function (type) {\n  return type && typeof type.transformPresence === 'function';\n};\n\nexports.callEach = function (callbacks, error) {\n  var called = false;\n  callbacks.forEach(function (callback) {\n    if (callback) {\n      callback(error);\n      called = true;\n    }\n  });\n  return called;\n};\n\nexports.truthy = function (arg) {\n  return !!arg;\n};\n\nexports.nextTick = function (callback) {\n  if (typeof process !== 'undefined' && process.nextTick) {\n    return process.nextTick.apply(null, arguments);\n  }\n\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  setTimeout(function () {\n    callback.apply(null, args);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}